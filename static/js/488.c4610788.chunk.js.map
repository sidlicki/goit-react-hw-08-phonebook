{"version":3,"file":"static/js/488.c4610788.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/contacts/contacts.selectors.js","webpack://react-homework-template/./src/components/ModalEdit/ModalEdit.module.css?8c8e","redux/modal/modal.selectors.js","components/ModalEdit/ModalEdit.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/ContactsPage.jsx","webpack://react-homework-template/./src/pages/styles.module.css?be7c"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"link\":\"ContactList_link__SuaLH\",\"button\":\"ContactList_button__7kL4l\",\"subtitle\":\"ContactList_subtitle__sjzfd\",\"buttonDelete\":\"ContactList_buttonDelete__3LEoC\",\"loaderWrapper\":\"ContactList_loaderWrapper__goayi\"};","export const selectorContacts = state => state.contacts.contacts.items;\n\nexport const selectorError = state => state.contacts.contacts.error;\n\nexport const selectorIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectorFilter = state => state.contacts.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"closeBtn\":\"ModalEdit_closeBtn__C1Xdb\",\"modal\":\"ModalEdit_modal__qHL5S\",\"wrapper\":\"ModalEdit_wrapper__Ji4aZ\",\"overlay\":\"ModalEdit_overlay__NLf+E\",\"title\":\"ModalEdit_title__hTaq7\",\"subtitle\":\"ModalEdit_subtitle__MZsWw\",\"form\":\"ModalEdit_form__BYjr7\",\"input\":\"ModalEdit_input__lQxNb\",\"button\":\"ModalEdit_button__Iw1sV\"};","export const selectIsOpenModal = state => state.modal.isOpenModal;\nexport const selectModalData = state => state.modal.modalData;\n","import React, { useEffect } from 'react';\nimport css from './ModalEdit.module.css';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectModalData } from 'redux/modal/modal.selectors';\nimport { closeModal, updateModalData } from 'redux/modal/modal.reducer';\nimport { selectorContacts } from 'redux/contacts/contacts.selectors';\nimport { editContact } from 'redux/contacts/contacts.reducer';\nimport { Notify } from 'notiflix';\n\nexport const Modal = () => {\n  const dispatch = useDispatch();\n\n  const modalData = useSelector(selectModalData);\n\n  const contacts = useSelector(selectorContacts);\n\n  useEffect(() => {\n    const handleKeyDown = event => {\n      if (event.code === 'Escape') {\n        dispatch(closeModal());\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'auto';\n    };\n  }, [dispatch]);\n\n  const handleOverlayClick = event => {\n    if (event.target === event.currentTarget) {\n      dispatch(closeModal());\n    }\n  };\n\n  const submitEditContact = evt => {\n    evt.preventDefault();\n\n    const [name, number] = evt.target.elements;\n\n    const isNameDuplicate = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === name.value.toLowerCase() &&\n        contact.id !== modalData.id\n    );\n\n    const isNumberDuplicate = contacts.some(\n      contact => contact.number === number.value && contact.id !== modalData.id\n    );\n\n    if (isNameDuplicate) {\n      alert(`A contact with that name already exists, try changing the name`);\n      return;\n    }\n    if (isNumberDuplicate) {\n      alert(`A contact with this phone number already exists`);\n      return;\n    }\n\n    const newContactInfo = {\n      name: name.value,\n      number: number.value,\n      id: modalData.id,\n    };\n\n    try {\n      dispatch(editContact(newContactInfo))\n        .unwrap()\n        .then(() =>\n          Notify.success(\n            `Contact \"${newContactInfo.name}\"  edited successfully`\n          )\n        );\n      dispatch(updateModalData(newContactInfo));\n    } catch (e) {\n      Notify.error(\n        `Contact \"${newContactInfo.name}\" not edited.  Error: ${e.message}`\n      );\n    }\n  };\n\n  return (\n    <div onClick={handleOverlayClick} className={css.overlay}>\n      <div className={css.modal}>\n        <button className={css.closeBtn} onClick={() => dispatch(closeModal())}>\n          ❌\n        </button>\n        <div className={css.wrapper}>\n          <h3 className={css.title}>Edit contact:</h3>\n          <p className={css.subtitle}>\n            \"{modalData.name} : {modalData.number}\"\n          </p>\n          <form className={css.form} onSubmit={submitEditContact}>\n            <input\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              defaultValue={modalData.name}\n              placeholder=\"Enter new name\"\n              required\n              pattern=\"^[A-Za-zА-Яа-яЇїІі\\d\\s]+$\"\n              title=\"You can enter letters of the Latin and Cyrillic alphabets, numbers, and spaces.\"\n            />\n            <input\n              className={css.input}\n              type=\"text\"\n              name=\"number\"\n              defaultValue={modalData.number}\n              placeholder=\"Enter new number\"\n              required\n              pattern=\"^[\\d+\\s\\-*#]{5,18}$\"\n              title=\"Phone number can contain digits, spaces, hyphens, or symbols like *, #, etc. Length: 5-18 characters.\"\n            />\n\n            <button\n              type=\"submit\"\n              className={css.button}\n              title={`Change this contact information`}\n            >\n              Change information\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteContact,\n  fetchAllContacts,\n} from 'redux/contacts/contacts.reducer';\nimport { Notify } from 'notiflix';\nimport Loader from 'components/Loader/Loader';\nimport {\n  selectorContacts,\n  selectorFilter,\n  selectorIsLoading,\n} from 'redux/contacts/contacts.selectors';\nimport { openModal } from 'redux/modal/modal.reducer';\nimport { Modal } from 'components/ModalEdit/ModalEdit';\nimport { selectIsOpenModal } from 'redux/modal/modal.selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectorContacts);\n\n  const filter = useSelector(selectorFilter);\n\n  const isLoading = useSelector(selectorIsLoading);\n\n  const isOpenModal = useSelector(selectIsOpenModal);\n\n  const filteredContacts = contacts.filter(\n    contact =>\n      contact.name.trim().toLowerCase().includes(filter.toLowerCase().trim()) ||\n      contact.number.trim().toString().includes(filter.toLowerCase().trim())\n  );\n\n  const filteredAndSortedContacts = [...filteredContacts].sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n\n  const handleDeleteContact = (name, id) => {\n    dispatch(deleteContact(id))\n      .unwrap()\n      .then(() => Notify.info(`Contact \"${name}\" deleted`));\n  };\n\n  return (\n    <ul className={css.list}>\n      {isLoading && (\n        <div className={css.loaderWrapper}>\n          <Loader />\n        </div>\n      )}\n      {filteredAndSortedContacts.length > 0 ? (\n        filteredAndSortedContacts.map(contact => (\n          <li key={contact.id} className={css.item}>\n            {/* button edit */}\n            <button\n              className={css.button}\n              title={`Edit this conatct`}\n              onClick={() => dispatch(openModal(contact))}\n            >\n              🖊\n            </button>\n            {/*  */}\n            <a className={css.link} href={`tel:${contact.number}`}>\n              <span>\n                <b>{contact.name}</b>:\n              </span>\n              <span> {contact.number}</span>\n            </a>\n\n            <button\n              className={`${css.button} ${css.buttonDelete}`}\n              onClick={() => handleDeleteContact(contact.name, contact.id)}\n              title={`Delete contact \"${contact.name}\"`}\n            >\n              Delete\n            </button>\n          </li>\n        ))\n      ) : (\n        <h3 className={css.subtitle}>No contacts found.</h3>\n      )}\n      {isOpenModal && <Modal />}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\"};","import { useDispatch } from 'react-redux';\nimport css from './Filter.module.css';\nimport { filterContacts } from 'redux/contacts/contacts.reducer';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <input\n      className={css.input}\n      type=\"text\"\n      placeholder=\"Search...\"\n      onChange={evt => dispatch(filterContacts(evt.target.value))}\n      title=\"Search by name or phone number\"\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useDispatch, useSelector } from 'react-redux';\nimport css from './ContactForm.module.css';\nimport { Notify } from 'notiflix';\nimport { addContact } from 'redux/contacts/contacts.reducer';\nimport { selectorContacts } from 'redux/contacts/contacts.selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectorContacts);\n\n  const submitAddContact = evt => {\n    evt.preventDefault();\n\n    const [name, number] = evt.target.elements;\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.value.toLowerCase()\n      )\n    ) {\n      alert(\n        `A contact with that name (${name.value.toLowerCase()}) already exists, try changing the name`\n      );\n      return;\n    }\n    if (contacts.some(contact => contact.number === number.value)) {\n      alert(\n        `A contact with this phone number (${number.value}) already exists`\n      );\n      return;\n    }\n\n    const newContact = {\n      name: name.value,\n      number: number.value,\n    };\n    try {\n      dispatch(addContact(newContact))\n        .unwrap()\n        .then(() => {\n          evt.target.reset();\n        })\n        .then(() => {\n          Notify.success(`Contact \"${newContact.name}\"  added successfully`);\n        });\n    } catch (e) {\n      Notify.error(\n        `Contact \"${newContact.name}\" not added.  Error: ${e.message}`\n      );\n    }\n  };\n  return (\n    <form onSubmit={submitAddContact} className={css.form}>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        required\n        pattern=\"^[A-Za-zА-Яа-яЇїІі\\d\\s]+$\"\n        title=\"You can enter letters of the Latin and Cyrillic alphabets, numbers, and spaces.\"\n      />\n      <input\n        className={css.input}\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Enter number\"\n        required\n        pattern=\"^[\\d+\\s\\-*#]{5,18}$\"\n        title=\"Phone number can contain digits, spaces, hyphens, or symbols like *, #, etc. Length: 5-18 characters.\"\n      />\n\n      <button type=\"submit\" className={css.button} title={`Add new contact`}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport css from './styles.module.css';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <h1 className={css.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={css.subtitle}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\nexport default ContactsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"styles_title__Eys6g\",\"subtitle\":\"styles_subtitle__DqUiJ\",\"homeTitle\":\"styles_homeTitle__lV-0B\",\"form\":\"styles_form__oR3c0\",\"label\":\"styles_label__IRvBR\",\"input\":\"styles_input__t9D6P\",\"button\":\"styles_button__6oMs0\"};"],"names":["selectorContacts","state","contacts","items","selectorIsLoading","isLoading","selectorFilter","filter","selectIsOpenModal","modal","isOpenModal","selectModalData","modalData","Modal","dispatch","useDispatch","useSelector","useEffect","handleKeyDown","event","code","closeModal","window","addEventListener","document","body","style","overflow","removeEventListener","onClick","target","currentTarget","className","css","name","number","onSubmit","evt","preventDefault","elements","isNameDuplicate","some","contact","toLowerCase","value","id","isNumberDuplicate","alert","newContactInfo","editContact","unwrap","then","Notify","updateModalData","e","message","type","defaultValue","placeholder","required","pattern","title","ContactList","fetchAllContacts","filteredContacts","trim","includes","toString","filteredAndSortedContacts","sort","a","b","localeCompare","Loader","length","map","openModal","href","deleteContact","Filter","onChange","filterContacts","ContactForm","newContact","addContact","reset"],"sourceRoot":""}